syntax = "proto3";

package practice;
option go_package="practicepb";

message Practicing {
    string first_state = 1;
    string second_state = 2;
}

message PracticeRequest {
    Practicing practicing = 1;
}

message PracticeResponse {
    string result = 1;
}

message PracticeManyTimesRequest {
    Practicing practicing = 1;
}

message PracticeManyTimesResponse {
    string result = 1;
}

message LongPracticeRequest {
    Practicing practicing = 1;
}

message LongPracticeResponse {
    string result = 1;
}

message PracticeBiDiRequest {
    Practicing practicing = 1;
}

message PracticeBiDiResponse {
    string result = 1;
}

message PracticeWithDeadlineRequest {
    Practicing practicing = 1;
}

message PracticeWithDeadlineResponse {
    string result = 1;
}

service PracticeService{
    // Unary
    rpc Practice(PracticeRequest) returns (PracticeResponse) {};

    // Server Streaming
    rpc PracticeManyTimes(PracticeManyTimesRequest) returns (stream PracticeManyTimesResponse) {};

    // Client Streaming
    rpc LongPractice(stream LongPracticeRequest) returns (LongPracticeResponse) {};

    // Bi Directional Streaming
    rpc PracticeBiDi(stream PracticeBiDiRequest) returns (stream PracticeBiDiResponse) {};

    // Unary with deadline
    rpc PracticeWithDeadline(PracticeWithDeadlineRequest) returns (PracticeWithDeadlineResponse) {};
}